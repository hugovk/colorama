name: Test

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * 5'
  workflow_dispatch:

jobs:

  mac:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - run: ./demos/demo.sh
    - run: ./demos/demo.sh
      env:
        FORCE_COLOR: true
    - run: ./demos/demo.sh
      env:
        NO_COLOR: true

  lin:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - run: ./demos/demo.sh
    - run: ./demos/demo.sh
      env:
        FORCE_COLOR: true
    - run: ./demos/demo.sh
      env:
        NO_COLOR: true

  docker:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - run: docker run --rm -tv $(pwd):/src -w /src/demos python:3-slim ./demo.sh
    - run: docker run --rm -tv $(pwd):/src -w /src/demos -e FORCE_COLOR=true python:3-slim ./demo.sh
    - run: docker run --rm -tv $(pwd):/src -w /src/demos -e NO_COLOR=true python:3-slim ./demo.sh

  cmd:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - shell: cmd
      run: ./demos/demo.bat
    - shell: cmd
      run: ./demos/demo.bat
      env:
        FORCE_COLOR: true
    - shell: cmd
      run: ./demos/demo.bat
      env:
        NO_COLOR: true

  ps:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - shell: powershell
      run: ./demos/demo.bat
    - shell: powershell
      run: ./demos/demo.bat
      env:
        FORCE_COLOR: true
    - shell: powershell
      run: ./demos/demo.bat
      env:
        NO_COLOR: true

  bash:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - shell: bash
      run: ./demos/demo.sh
    - shell: bash
      run: ./demos/demo.sh
      env:
        FORCE_COLOR: true
    - shell: bash
      run: ./demos/demo.sh
      env:
        NO_COLOR: true

  msys2:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
    - shell: msys2 {0}
      run: |
        export PATH=$PATH:/$(echo "$pythonLocation" | sed 's#\\#/#g' | sed 's#:##g')
        ./demos/demo.sh
    - shell: msys2 {0}
      run: |
        export PATH=$PATH:/$(echo "$pythonLocation" | sed 's#\\#/#g' | sed 's#:##g')
        ./demos/demo.sh
      env:
        FORCE_COLOR: true
    - shell: msys2 {0}
      run: |
        export PATH=$PATH:/$(echo "$pythonLocation" | sed 's#\\#/#g' | sed 's#:##g')
        ./demos/demo.sh
      env:
        NO_COLOR: true

  pacman:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v1
    - uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
    - shell: msys2 {0}
      run: |
        pacman --noconfirm -S python
    - shell: msys2 {0}
      run: |
        ./demos/demo.sh
    - shell: msys2 {0}
      run: |
        ./demos/demo.sh
      env:
        FORCE_COLOR: true
    - shell: msys2 {0}
      run: |
        ./demos/demo.sh
      env:
        NO_COLOR: true

  pacman_cmd:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v1
    - uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
    - shell: msys2 {0}
      run: |
        pacman --noconfirm -S python
    - shell: cmd
      run: |
        ./demos/demo.bat
    - shell: cmd
      run: |
        ./demos/demo.bat
      env:
        FORCE_COLOR: true
    - shell: cmd
      run: |
        ./demos/demo.bat
      env:
        NO_COLOR: true

  pacman_ps:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v1
    - uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
    - shell: msys2 {0}
      run: |
        pacman --noconfirm -S python
    - shell: powershell
      run: |
        ./demos/demo.bat
    - shell: powershell
      run: |
        ./demos/demo.bat
      env:
        FORCE_COLOR: true
    - shell: powershell
      run: |
        ./demos/demo.bat
      env:
        NO_COLOR: true

  pacman_bash:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v1
    - uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
    - shell: msys2 {0}
      run: |
        pacman --noconfirm -S python
    - shell: bash
      run: |
        ./demos/demo.sh
    - shell: bash
      run: |
        ./demos/demo.sh
      env:
        FORCE_COLOR: true
    - shell: bash
      run: |
        ./demos/demo.sh
      env:
        NO_COLOR: true

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        pyenv:
          - { pyver: "pypy2", toxenv: "pypy" }
          - { pyver: "pypy3", toxenv: "pypy3" }
          - { pyver: "2.7",   toxenv: "py27" }
          - { pyver: "3.5",   toxenv: "py35" }
          - { pyver: "3.6",   toxenv: "py36" }
          - { pyver: "3.7",   toxenv: "py37" }
          - { pyver: "3.8",   toxenv: "py38" }
          - { pyver: "3.9",   toxenv: "py39" }
          - { pyver: "3.10",  toxenv: "py310" }

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.pyenv.pyver }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.pyenv.pyver }}

      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"

      - name: Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key:
            ${{ matrix.os }}-${{ matrix.pyenv.pyver }}-v1-${{ hashFiles('**/tox.ini') }}
          restore-keys: |
            ${{ matrix.os }}-${{ matrix.pyenv.pyver }}-v1-

      - name: Install dependencies
        run: |
          python -m pip install tox

      - name: Tox tests
        run: |
          tox -e ${{ matrix.pyenv.toxenv }}
